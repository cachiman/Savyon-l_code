

# This file was *autogenerated* from the file c.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2)#!/usr/bin/env sage
# run with: sage c.sage

def monkeval(op):
    try:
        return int(op)
    except ValueError:
        return op.strip().split(" ")


def parse(text):
    return {
        name: monkeval(op) for name, op in [l.split(":") for l in text.split("\n") if l]
    }


def run(monkeys, name):
    if isinstance(monkeys[name], (int, str)):
        return monkeys[name]
    else:
        l, op, r = monkeys[name]
        eq = f"({run(monkeys, l)} {op} {run(monkeys, r)})"
        if "x" not in eq:
            return int(eval(eq))
        return eq


def search(monkeys):
    monkeys["humn"] = "x"
    l = run(monkeys, monkeys["root"][_sage_const_0 ])
    r = run(monkeys, monkeys["root"][_sage_const_2 ])
    print(f"{l} == {r}")
    return f"{l} == {r}"

sample = """root: pppw + sjmn
dbpl: 5
cczh: sllz + lgvd
zczc: 2
ptdq: humn - dvpt
dvpt: 3
lfqf: 4
humn: 5
ljgn: 2
sjmn: drzm * dbpl
sllz: 4
pppw: cczh / lfqf
lgvd: ljgn * ptdq
drzm: hmdt - zczc
hmdt: 32"""
eq = search(parse(sample))
print(eq)
print(eval(f"solve({eq}, x)"))

eq = search(parse(open("input.txt").read()))
print(eval(f"solve({eq}, x)"))

