#!/usr/bin/env bash
# LICENSE: unlicense. This is free and unencumbered software released into the public domain.
# see unlicense.org for full license

RED=$(tput setaf 1)
CLEAR=$(tput sgr0)
MAIN_BRANCH=${MAIN_BRANCH:-main}
VERBOSE=

function usage {
    cat <<"EOF"
rmtree [-vh] [-m <MAIN_BRANCH>] <worktree directory to delete>

remove a worktree from a git repository. Assumes you're in a directory with
folders representing both a worktree and the main branch of your project.

FLAGS:

    -h: print this help
    -v: verbose mode
    -m: MAIN_BRANCH defaults to `main`, and will check for `master` if that
        doesn't exist. Use this flag to pass a different main branch name.
        You may also set the MAIN_BRANCH environment variable to set the
        main branch name.

EOF
    exit 1
}

function die {
    # if verbose was set, and we're exiting early, make sure that we set +x to
    # stop the shell echoing verbosely
    if [ -n "$VERBOSE" ]; then
        set +x
    fi
    printf '%s%s%s\n' "$RED" "$1" "$CLEAR"
    exit 1
}

# rmtree <dir> will remove a worktree's directory, then prune the worktree list
# and delete the branch
function rmtree {
    if [ -n "$VERBOSE" ]; then
        set -x
    fi

    # verify that the first argument is a directory that exists, that we want
    # to remove
    if [ -z "$1" ] || [ ! -d "$1" ]; then
        die "You must provide a directory name that is a worktree to remove"
    fi

    # verify that the main branch exists
    if [ ! -d "$MAIN_BRANCH" ]; then
        # for legacy reasons, check "master" as a possibility for the main
        # branch
        if [ -d "master" ] ; then
            MAIN_BRANCH=master
        else
            die "Could not find main branch directory <$MAIN_BRANCH>"
        fi
    fi

    branch_name=$(cd "$1" && git rev-parse --abbrev-ref HEAD)
    rm -rf "$1"
    (cd $MAIN_BRANCH && git worktree prune && git branch -D "$branch_name")
}

while true; do
    case $1 in
        help | -h | --help)
            usage
            ;;
        -v | --verbose)
            VERBOSE=true
            shift
            ;;
        -m | --main-branch)
            MAIN_BRANCH=$2
            shift
            ;;
        *)
            break
            ;;
    esac
done

rmtree "$@"
